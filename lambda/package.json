{
  "name": "lambda",
  "version": "1.0.0",
  "description": "Lambda function written in Typescript to parse csv files from s3 bucket ingress",
  "main": "index.js",
  "scripts": {
    "purgeS3": "aws s3 rm s3://lambda-ingress-bucket --recursive | true",
    "purgeSQS": "QUEUE_URL=\"https://sqs.eu-west-2.amazonaws.com/264231384781/output-queue\" && aws sqs purge-queue --queue-url $QUEUE_URL | true",
    "purgeDynamo": "aws dynamodb scan --table-name processed_data --select 'ALL_ATTRIBUTES' --no-consistent-read --query 'Items[*].{hash: {S: hash.S}}' --output text | awk '{print $2}' | xargs -I% aws dynamodb delete-item --table-name processed_data --key '{\"hash\":{\"S\":\"%\"}}' | true",
    "purgeAll": "npm run purgeS3 && npm run purgeSQS && npm run purgeDynamo",
    "structure": "tree -a -I '.git|node_modules|dist|.terraform|.terraform*|.DS_Store|terraform.tfstate*|mind.txt|*.zip' --noreport --dirsfirst --filelimit=1000 --charset utf-8 -F -H . > project_structure.md",
    "upload1": "aws s3 cp data/items_20220130.csv s3://lambda-ingress-bucket/ && aws s3 cp data/orders_20220130.csv s3://lambda-ingress-bucket/ && aws s3 cp data/customers_20220130.csv s3://lambda-ingress-bucket/",
    "upload2": "aws s3 cp data/items_20220131.csv s3://lambda-ingress-bucket/ && aws s3 cp data/orders_20220131.csv s3://lambda-ingress-bucket/ && aws s3 cp data/customers_20220131.csv s3://lambda-ingress-bucket/",
    "e2e": "npm run format && npm run build && npm run package && npm run purgeAll && npm run tf-destroy-lambda && npm run tf-apply",
    "tf-init": "terraform -chdir='../infra/' init",
    "tf-apply": "terraform -chdir='../infra/' apply -auto-approve",
    "tf-destroy-lambda": "terraform -chdir='../infra/' destroy --target=aws_lambda_function.processor -auto-approve",
    "tf-format": "terraform -chdir='../infra/' fmt",
    "test": "jest test/*.test.ts",
    "build": "npx tsc",
    "prettier": "prettier -w '*.ts' 'src/**/*.ts' 'test/**/*.ts'",
    "format": "npm run prettier && npm run tf-format",
    "package": "rm ../infra/processor.zip && zip -r ../infra/processor.zip node_modules && cd dist && zip -r ../../infra/processor.zip *"
  },
  "author": "sencerburakokumus@gmail.com",
  "license": "ISC",
  "dependencies": {
    "aws-lambda": "^1.0.7",
    "aws-sdk": "^2.1333.0",
    "fs": "^0.0.1-security",
    "lodash": "^4.17.21",
    "papaparse": "^5.4.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-typescript": "^7.21.0",
    "@types/aws-lambda": "^8.10.111",
    "@types/jest": "^29.4.1",
    "@types/lodash": "^4.14.191",
    "@types/node": "^18.15.0",
    "@types/papaparse": "^5.3.7",
    "@types/uuid": "^9.0.1",
    "aws-sdk-mock": "^5.8.0",
    "jest": "^29.5.0",
    "prettier": "^2.8.4",
    "ts-jest": "^29.0.5",
    "typedoc": "^0.23.26",
    "typescript": "^4.9.5",
    "aws-lambda-mock-context": "^3.2.1"
  }
}